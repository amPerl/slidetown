use slidetown::parsers::lf::{Block, Header};
use std::io::Cursor;

#[test]
fn header_mp_terrain() {
    let header_buffer: &[u8] = &[
        0x4C, 0x46, 0x00, 0x00, 0x6B, 0x6A, 0x63, 0x00, 0x61, 0x67, 0x00, 0x00, 0x26, 0x8E, 0x32,
        0x01, 0xFF, 0x37, 0x04, 0x00, 0x0E, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x52, 0x00, 0x00, 0x00, 0x2F, 0x00, 0x00, 0x00, 0x0E, 0x0F, 0x00, 0x00, 0x00, 0x00,
        0x48, 0x43, 0x84, 0x48, 0xFF, 0xC5, 0x00, 0x18, 0xA8, 0xC5, 0x00, 0xB0, 0x7E, 0x46, 0x00,
        0x40, 0x12, 0x46,
    ];
    let mut header_cursor = Cursor::new(header_buffer);
    let header: Header = Header::parse(&mut header_cursor).unwrap();
    assert_eq!(
        Header {
            unknown1: 26465,
            version_date: 20090406,
            unknown2: 276479,
            block_count: 3854,
            unknown3: vec!(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
            size_x: 82,
            size_y: 47,
            size_idx: 3854,
            unknown4: vec!(200.0, -8169.0645, -5379.0, 16300.0, 9360.0),
        },
        header
    );
}

#[test]
fn block_420_mp_terrain() {
    let block_buffer: &[u8] = &[
        0xA4, 0x01, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x5A, 0x77, 0x02,
        0x00, 0xA0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    ];
    let mut block_cursor = Cursor::new(block_buffer);
    let block: Block = Block::parse(&mut block_cursor).unwrap();
    assert_eq!(
        Block {
            index: 420,
            position_x: 10,
            position_y: 5,
            file_offset: 161626,
            file_length: 160,
            unknown: 1,
        },
        block
    );
}
